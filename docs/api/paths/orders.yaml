/orders:
  post:
    tags:
      - Order
    summary: 주문 생성
    description: |
      장바구니 상품을 주문하고 포인트로 결제합니다.

      **기능 요구사항**: FR-O-001
      **관련 문서**: docs/requirements/order.md

      **비즈니스 규칙**:
      - 장바구니 아이템을 기반으로 주문 생성
      - 재고 가용성 사전 확인
      - 쿠폰은 주문당 1개만 적용 가능
      - 주문 생성 → 포인트 차감 → 재고 차감 순서로 처리
      - 하나라도 실패하면 전체 롤백
      - 주문 완료 후 외부 데이터 플랫폼으로 비동기 전송 (실패해도 주문 완료)

      **프로세스**:
      1. 장바구니 검증
      2. 재고 가용성 확인
      3. 쿠폰 검증 (선택)
      4. 주문 생성 (PENDING)
      5. 포인트 차감
      6. 재고 차감
      7. 쿠폰 사용 처리
      8. 주문 상태 변경 (PAID)
      9. 장바구니 비우기
      10. 외부 데이터 전송 (비동기)
    operationId: createOrder
    parameters:
      - name: userId
        in: query
        description: 사용자 ID
        required: true
        schema:
          type: integer
          example: 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/order.yaml#/components/schemas/CreateOrderRequest'
          examples:
            withCoupon:
              summary: 쿠폰 사용
              value:
                cartItemIds: [1, 2, 3]
                shippingAddress:
                  recipientName: "홍길동"
                  phoneNumber: "010-1234-5678"
                  postalCode: "12345"
                  address: "서울특별시 강남구 테헤란로 123"
                  detailAddress: "4층 401호"
                couponId: 5
            withoutCoupon:
              summary: 쿠폰 미사용
              value:
                cartItemIds: [1, 2]
                shippingAddress:
                  recipientName: "홍길동"
                  phoneNumber: "010-1234-5678"
                  postalCode: "12345"
                  address: "서울특별시 강남구 테헤란로 123"
                  detailAddress: "4층 401호"
    responses:
      '201':
        description: 주문 생성 성공
        content:
          application/json:
            schema:
              $ref: '../schemas/order.yaml#/components/schemas/OrderResponse'
      '400':
        description: 잘못된 요청
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/components/schemas/Error'
            examples:
              cartItemsNotFound:
                summary: 장바구니 아이템 없음
                value:
                  code: "CART_ITEMS_NOT_FOUND"
                  message: "장바구니 아이템을 찾을 수 없습니다"
              insufficientInventory:
                summary: 재고 부족
                value:
                  code: "INSUFFICIENT_INVENTORY"
                  message: "재고가 부족합니다"
                  details:
                    productId: 10
                    optionId: 101
                    requestedQuantity: 5
                    availableQuantity: 2
              invalidCoupon:
                summary: 유효하지 않은 쿠폰
                value:
                  code: "INVALID_COUPON"
                  message: "사용할 수 없는 쿠폰입니다"
              insufficientPoints:
                summary: 포인트 부족
                value:
                  code: "INSUFFICIENT_POINTS"
                  message: "포인트 잔액이 부족합니다"
                  details:
                    currentBalance: 50000
                    requiredAmount: 84000
      '500':
        description: 서버 오류

  get:
    tags:
      - Order
    summary: 주문 목록 조회
    description: |
      사용자의 주문 목록을 조회합니다.

      **기능 요구사항**: FR-O-002
      **관련 문서**: docs/requirements/order.md

      **비즈니스 규칙**:
      - 최신 주문부터 내림차순 정렬
      - 기본 페이지 크기: 20개
    operationId: getOrders
    parameters:
      - name: userId
        in: query
        description: 사용자 ID
        required: true
        schema:
          type: integer
          example: 1
      - name: status
        in: query
        description: 주문 상태 필터
        required: false
        schema:
          $ref: '../schemas/order.yaml#/components/schemas/OrderStatus'
      - name: page
        in: query
        description: 페이지 번호
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
      - name: size
        in: query
        description: 페이지 크기
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
    responses:
      '200':
        description: 조회 성공
        content:
          application/json:
            schema:
              $ref: '../schemas/order.yaml#/components/schemas/OrderListResponse'
      '500':
        description: 서버 오류

/orders/{orderId}:
  get:
    tags:
      - Order
    summary: 주문 상세 조회
    description: |
      특정 주문의 상세 정보를 조회합니다.

      **기능 요구사항**: FR-O-003
      **관련 문서**: docs/requirements/order.md
    operationId: getOrder
    parameters:
      - name: userId
        in: query
        description: 사용자 ID
        required: true
        schema:
          type: integer
          example: 1
      - name: orderId
        in: path
        description: 주문 ID
        required: true
        schema:
          type: integer
          example: 1
    responses:
      '200':
        description: 조회 성공
        content:
          application/json:
            schema:
              $ref: '../schemas/order.yaml#/components/schemas/OrderResponse'
      '404':
        description: 주문을 찾을 수 없음
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/components/schemas/Error'
            example:
              code: "ORDER_NOT_FOUND"
              message: "주문을 찾을 수 없습니다"
      '403':
        description: 다른 사용자의 주문
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/components/schemas/Error'
            example:
              code: "FORBIDDEN"
              message: "다른 사용자의 주문입니다"
      '500':
        description: 서버 오류

/orders/{orderId}/items:
  get:
    tags:
      - Order
    summary: 주문 항목 조회
    description: |
      특정 주문의 항목 목록을 조회합니다.

      **기능 요구사항**: FR-O-004
      **관련 문서**: docs/requirements/order.md
    operationId: getOrderItems
    parameters:
      - name: userId
        in: query
        description: 사용자 ID
        required: true
        schema:
          type: integer
          example: 1
      - name: orderId
        in: path
        description: 주문 ID
        required: true
        schema:
          type: integer
          example: 1
    responses:
      '200':
        description: 조회 성공
        content:
          application/json:
            schema:
              type: object
              required:
                - orderId
                - items
              properties:
                orderId:
                  type: integer
                  example: 1
                items:
                  type: array
                  items:
                    $ref: '../schemas/order.yaml#/components/schemas/OrderItem'
      '404':
        description: 주문을 찾을 수 없음
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/components/schemas/Error'
            example:
              code: "ORDER_NOT_FOUND"
              message: "주문을 찾을 수 없습니다"
      '403':
        description: 다른 사용자의 주문
      '500':
        description: 서버 오류
