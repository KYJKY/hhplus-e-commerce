/users/me:
  get:
    tags:
      - User
    summary: 내 정보 조회
    description: |
      사용자 정보를 조회합니다.

      **관련 문서**: docs/requirements/user.md
    operationId: getMyInfo
    parameters:
      - name: userId
        in: query
        description: 사용자 ID
        required: true
        schema:
          type: integer
          example: 1
    responses:
      '200':
        description: 조회 성공
        content:
          application/json:
            schema:
              $ref: '../schemas/user.yaml#/components/schemas/UserResponse'
      '500':
        description: 서버 오류

  patch:
    tags:
      - User
    summary: 내 정보 수정
    description: |
      사용자 정보를 수정합니다.

      **관련 문서**: docs/requirements/user.md
    operationId: updateMyInfo
    parameters:
      - name: userId
        in: query
        description: 사용자 ID
        required: true
        schema:
          type: integer
          example: 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/user.yaml#/components/schemas/UpdateUserRequest'
          example:
            username: "홍길동"
            phoneNumber: "010-9876-5432"
    responses:
      '200':
        description: 수정 성공
        content:
          application/json:
            schema:
              $ref: '../schemas/user.yaml#/components/schemas/UserResponse'
      '400':
        description: 잘못된 요청
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/components/schemas/Error'
            example:
              code: "INVALID_PHONE_NUMBER"
              message: "유효하지 않은 전화번호 형식입니다"
      '500':
        description: 서버 오류

/users/me/addresses:
  get:
    tags:
      - User
    summary: 배송지 목록 조회
    description: |
      사용자의 배송지 목록을 조회합니다.

      **관련 문서**: docs/requirements/user.md

      **비즈니스 규칙**:
      - 최대 10개까지 등록 가능
      - 기본 배송지는 1개만 가능
    operationId: getAddresses
    parameters:
      - name: userId
        in: query
        description: 사용자 ID
        required: true
        schema:
          type: integer
          example: 1
    responses:
      '200':
        description: 조회 성공
        content:
          application/json:
            schema:
              $ref: '../schemas/user.yaml#/components/schemas/UserAddressListResponse'
      '500':
        description: 서버 오류

  post:
    tags:
      - User
    summary: 배송지 추가
    description: |
      새로운 배송지를 추가합니다.

      **관련 문서**: docs/requirements/user.md

      **비즈니스 규칙**:
      - 최대 10개까지 등록 가능
      - 기본 배송지로 설정 시 기존 기본 배송지는 해제됨
    operationId: addAddress
    parameters:
      - name: userId
        in: query
        description: 사용자 ID
        required: true
        schema:
          type: integer
          example: 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/user.yaml#/components/schemas/AddAddressRequest'
          example:
            recipientName: "홍길동"
            phoneNumber: "010-1234-5678"
            postalCode: "12345"
            address: "서울특별시 강남구 테헤란로 123"
            detailAddress: "4층 401호"
            isDefault: true
    responses:
      '201':
        description: 추가 성공
        content:
          application/json:
            schema:
              $ref: '../schemas/user.yaml#/components/schemas/UserAddress'
      '400':
        description: 잘못된 요청
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/components/schemas/Error'
            examples:
              addressLimitExceeded:
                summary: 배송지 최대 개수 초과
                value:
                  code: "ADDRESS_LIMIT_EXCEEDED"
                  message: "배송지는 최대 10개까지 등록할 수 있습니다"
              invalidPostalCode:
                summary: 유효하지 않은 우편번호
                value:
                  code: "INVALID_POSTAL_CODE"
                  message: "유효하지 않은 우편번호 형식입니다"
      '500':
        description: 서버 오류

/users/me/addresses/{addressId}:
  patch:
    tags:
      - User
    summary: 배송지 수정
    description: |
      배송지 정보를 수정합니다.

      **관련 문서**: docs/requirements/user.md

      **비즈니스 규칙**:
      - 기본 배송지로 설정 시 기존 기본 배송지는 해제됨
    operationId: updateAddress
    parameters:
      - name: userId
        in: query
        description: 사용자 ID
        required: true
        schema:
          type: integer
          example: 1
      - name: addressId
        in: path
        description: 배송지 ID
        required: true
        schema:
          type: integer
          example: 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/user.yaml#/components/schemas/UpdateAddressRequest'
          example:
            recipientName: "홍길순"
            isDefault: true
    responses:
      '200':
        description: 수정 성공
        content:
          application/json:
            schema:
              $ref: '../schemas/user.yaml#/components/schemas/UserAddress'
      '400':
        description: 잘못된 요청
      '404':
        description: 배송지를 찾을 수 없음
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/components/schemas/Error'
            example:
              code: "ADDRESS_NOT_FOUND"
              message: "배송지를 찾을 수 없습니다"
      '403':
        description: 다른 사용자의 배송지
      '500':
        description: 서버 오류

  delete:
    tags:
      - User
    summary: 배송지 삭제
    description: |
      배송지를 삭제합니다.

      **관련 문서**: docs/requirements/user.md

      **비즈니스 규칙**:
      - 기본 배송지 삭제 시 다른 배송지가 자동으로 기본 배송지가 되지 않음
    operationId: deleteAddress
    parameters:
      - name: userId
        in: query
        description: 사용자 ID
        required: true
        schema:
          type: integer
          example: 1
      - name: addressId
        in: path
        description: 배송지 ID
        required: true
        schema:
          type: integer
          example: 1
    responses:
      '204':
        description: 삭제 성공
      '404':
        description: 배송지를 찾을 수 없음
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/components/schemas/Error'
            example:
              code: "ADDRESS_NOT_FOUND"
              message: "배송지를 찾을 수 없습니다"
      '403':
        description: 다른 사용자의 배송지
      '500':
        description: 서버 오류
