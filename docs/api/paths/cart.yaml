/cart:
  get:
    tags:
      - Cart
    summary: 장바구니 조회
    description: |
      사용자의 장바구니 목록을 조회합니다.

      **기능 요구사항**: FR-C-001
      **관련 문서**: docs/requirements/cart.md

      **비즈니스 규칙**:
      - 실시간 재고 확인
      - 재고 0 또는 판매 불가능한 옵션은 isAvailable=false
      - 삭제된 상품/옵션은 자동 제외
      - 실시간 가격 반영
    operationId: getCart
    parameters:
      - name: userId
        in: query
        description: 사용자 ID
        required: true
        schema:
          type: integer
          example: 1
    responses:
      '200':
        description: 조회 성공
        content:
          application/json:
            schema:
              $ref: '../schemas/cart.yaml#/components/schemas/CartResponse'
      '500':
        description: 서버 오류

  delete:
    tags:
      - Cart
    summary: 장바구니 전체 비우기
    description: |
      장바구니의 모든 항목을 삭제합니다.

      **기능 요구사항**: FR-C-005
      **관련 문서**: docs/requirements/cart.md
    operationId: clearCart
    parameters:
      - name: userId
        in: query
        description: 사용자 ID
        required: true
        schema:
          type: integer
          example: 1
    responses:
      '204':
        description: 삭제 성공
      '500':
        description: 서버 오류

/cart/items:
  post:
    tags:
      - Cart
    summary: 장바구니 항목 추가
    description: |
      상품 옵션을 장바구니에 추가합니다.

      **기능 요구사항**: FR-C-002
      **관련 문서**: docs/requirements/cart.md

      **비즈니스 규칙**:
      - 동일 옵션 존재 시 수량 증가
      - 재고 확인 필수
      - 수량: 1~99
      - 최대 20개 항목까지 담기 가능
      - 판매 불가능한 옵션은 추가 불가
    operationId: addCartItem
    parameters:
      - name: userId
        in: query
        description: 사용자 ID
        required: true
        schema:
          type: integer
          example: 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/cart.yaml#/components/schemas/AddCartItemRequest'
          example:
            optionId: 101
            quantity: 2
    responses:
      '201':
        description: 추가 성공
        content:
          application/json:
            schema:
              $ref: '../schemas/cart.yaml#/components/schemas/CartItemResponse'
      '400':
        description: 잘못된 요청
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/components/schemas/Error'
            examples:
              optionNotFound:
                summary: 옵션을 찾을 수 없음
                value:
                  code: "OPTION_NOT_FOUND"
                  message: "옵션을 찾을 수 없습니다"
              optionNotAvailable:
                summary: 판매 불가능한 옵션
                value:
                  code: "OPTION_NOT_AVAILABLE"
                  message: "판매 불가능한 옵션입니다"
              insufficientStock:
                summary: 재고 부족
                value:
                  code: "INSUFFICIENT_STOCK"
                  message: "재고가 부족합니다"
                  details:
                    availableStock: 5
                    requestedQuantity: 10
              invalidQuantity:
                summary: 유효하지 않은 수량
                value:
                  code: "INVALID_QUANTITY"
                  message: "수량은 1~99 사이여야 합니다"
              cartItemLimitExceeded:
                summary: 장바구니 항목 수 초과
                value:
                  code: "CART_ITEM_LIMIT_EXCEEDED"
                  message: "장바구니에는 최대 20개 항목까지 담을 수 있습니다"
      '500':
        description: 서버 오류

/cart/items/{itemId}:
  patch:
    tags:
      - Cart
    summary: 장바구니 수량 수정
    description: |
      장바구니 항목의 수량을 수정합니다.

      **기능 요구사항**: FR-C-003
      **관련 문서**: docs/requirements/cart.md

      **비즈니스 규칙**:
      - 수량: 1~99
      - 재고 확인
    operationId: updateCartItem
    parameters:
      - name: userId
        in: query
        description: 사용자 ID
        required: true
        schema:
          type: integer
          example: 1
      - name: itemId
        in: path
        description: 장바구니 항목 ID
        required: true
        schema:
          type: integer
          example: 1
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/cart.yaml#/components/schemas/UpdateCartItemRequest'
          example:
            quantity: 3
    responses:
      '200':
        description: 수정 성공
        content:
          application/json:
            schema:
              $ref: '../schemas/cart.yaml#/components/schemas/CartItemResponse'
      '400':
        description: 잘못된 요청
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/components/schemas/Error'
            examples:
              insufficientStock:
                summary: 재고 부족
                value:
                  code: "INSUFFICIENT_STOCK"
                  message: "재고가 부족합니다"
              invalidQuantity:
                summary: 유효하지 않은 수량
                value:
                  code: "INVALID_QUANTITY"
                  message: "수량은 1~99 사이여야 합니다"
      '404':
        description: 장바구니 항목을 찾을 수 없음
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/components/schemas/Error'
            example:
              code: "CART_ITEM_NOT_FOUND"
              message: "장바구니 항목을 찾을 수 없습니다"
      '403':
        description: 다른 사용자의 장바구니 항목
      '500':
        description: 서버 오류

  delete:
    tags:
      - Cart
    summary: 장바구니 항목 삭제
    description: |
      장바구니 항목을 삭제합니다.

      **기능 요구사항**: FR-C-004
      **관련 문서**: docs/requirements/cart.md
    operationId: deleteCartItem
    parameters:
      - name: userId
        in: query
        description: 사용자 ID
        required: true
        schema:
          type: integer
          example: 1
      - name: itemId
        in: path
        description: 장바구니 항목 ID
        required: true
        schema:
          type: integer
          example: 1
    responses:
      '204':
        description: 삭제 성공
      '404':
        description: 장바구니 항목을 찾을 수 없음
        content:
          application/json:
            schema:
              $ref: '../schemas/common.yaml#/components/schemas/Error'
            example:
              code: "CART_ITEM_NOT_FOUND"
              message: "장바구니 항목을 찾을 수 없습니다"
      '403':
        description: 다른 사용자의 장바구니 항목
      '500':
        description: 서버 오류
